# Start from a minimal Red Hat UBI9 base image
FROM registry.access.redhat.com/ubi9/ubi-minimal as base

# Update and install necessary dependencies
RUN microdnf update -y && \
    microdnf install -y --nodocs \
    gcc g++ git python3.11-devel python3.11-pip java-11-openjdk-headless java-11-openjdk-devel && \
    ln -fs /usr/bin/python3.11 /usr/bin/python && \
    ln -fs /usr/bin/pip3.11 /usr/bin/pip && \
    pip install --upgrade --no-cache-dir pip wheel && \
    microdnf clean all

# Use a builder stage to install Python dependencies
FROM base as builder

# Create a virtual environment using Python 3.11
# RUN python -m venv /app/venv

# # Activate the virtual environment and install dependencies
# ENV PATH="/app/venv/bin:$PATH"

# Copy the requirements and install them
COPY ./common/requirements.txt .
RUN pip install --no-cache-dir -r requirements.txt

COPY ./guardrails_ai_wrapper/requirements.txt .
RUN pip install --no-cache-dir -r requirements.txt

# Copy the application code to the builder
WORKDIR /app
COPY ./common /common
COPY ./guardrails_ai_wrapper/app.py /app
COPY ./guardrails_ai_wrapper/detector.py /app
COPY ./guardrails_ai_wrapper/scheme.py /app
COPY ./guardrails_ai_wrapper/experiments.py /app

# Set environment variables for Guardrails configuration
ARG GUARDRAILS_METRICS
ARG GUARDRAILS_REMOTE_INFERENCING
ARG GUARDRAILS_API_KEY

# Export the environment variables to be available during build
ENV GUARDRAILS_METRICS=${GUARDRAILS_METRICS}
ENV GUARDRAILS_REMOTE_INFERENCING=${GUARDRAILS_REMOTE_INFERENCING}
ENV GUARDRAILS_API_KEY=${GUARDRAILS_API_KEY}

# Copy the scripts to the container
COPY ./guardrails_ai_wrapper/configure_guardrails.sh /app
COPY ./guardrails_ai_wrapper/install_guardrails.sh /app

# Run the setup and installation scripts during the build process
RUN chmod +x /app/configure_guardrails.sh /app/install_guardrails.sh && \
    /app/configure_guardrails.sh && \
    /app/install_guardrails.sh

# Expose the necessary port
EXPOSE 8000

# Command to run the application
CMD ["uvicorn", "app:app", "--workers", "4", "--host", "0.0.0.0", "--port", "8000", "--log-config", "/common/log_conf.yaml"]
